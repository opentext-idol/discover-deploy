licenseServer:
  service:
    name: license-service
    port: 20000
  ip: localhost
  port: 20000

external:
  protocol: http
  host: localhost
  port: 80

secret:
  name: docker-secret
  base64dockerconfigjson:

docker:
  registry: "microfocusidolserver"
  nameSeparator: "/"
  versionSeparator: ":"
  pullPolicy: IfNotPresent
  versions:
    base: 23.3.0
    api: 23.3.0
    datasets: 23.3.0
    analysis: 23.3.0
    lemaData: 23.3.0
    lema: 23.3.0
    postgres: 14.4

auth:
  enabled: true
  name: auth
  container: auth-container
  image: solutions-auth-service
  config: auth-config
  secret: auth-secret
  adminUser: lema-auth
  adminPassword: lema-auth
  realm: lema
  apiClient: lema_api
  apiClientSecret: d0e76ad7-7d6b-4d86-be3a-5dfe715dbf87
  uiClient: lema_ui
  tokenExpiryTime: 600
  external:
    path: /auth/

  service:
    name: auth-service
    port: 8080
    protocol: http
    # must match auth.external.path, but without leading/trailing '/'
    path: auth
  db:
    config: auth-db-config
    container: auth-service-db
    username: lema
    password: lema
    database: lema-auth
    dataVolume: auth-db-data
    dataVolumeClaim: auth-db-data
    dataVolumeSize: 1Gi

analysis:
    enabled: true
    name: analysis-nifi
    container: analysis-nifi-container
    image: solutions-analysis-service
    config: analysis-nifi-config
    secret: analysis-nifi-secret
    replicas: 1
    service:
      name: analysis-service
      port: 8090
      jobsPort: 8091
      path: /
      jobsPath: /
    ingress:
      enabled: false
      path: /nifi/

filestore:
  name: filestore
  container: filestore-container
  image: solutions-filestore-service
  secret: filestore-config

  replicas: 1
  enabled: true
  dataVolume: filestore-data
  dataVolumeClaim: filestore-data
  dataVolumeSize: 10Gi
  username: lema-filestore
  password: lema-filestore
  bucket: lema-filestore
  service:
    protocol: http
    name: filestore-service
    port: 8333
    path: /

audit:
  enabled: true
  name: audit
  container: audit-db
  image: solutions-audit-db
  config: audit-config
  secret: audit-secret
  dataVolume: audit-db-data
  dataVolumeClaim: audit-db-data
  dataVolumeSize: 1Gi
  username: audit-user
  password: audit-pass
  database: auditDb
  service:
    name: audit-service
    port: 5432

entity:
  index:
    enabled: true
    name: entity-index-db
    container: entity-index-db-container
    image: solutions-entity-indexdb
    config: entity-index-db-config
    dataVolume: entity-index-db-data
    dataVolumeClaim: entity-index-db-data
    dataVolumeSize: 5Gi
    service:
      name: entity-index-db-service
      queryPort: 9100
      indexPort: 9101
    ingress:
      enabled: false
      path: /content/
  storage:
    enabled: true
    name: entity-storage-db
    container: entity-storage-db-container
    image: solutions-entity-storagedb
    config: entity-storage-db-config
    dataVolume: entity-storage-db-data
    dataVolumeClaim: entity-storage-db-data
    dataVolumeSize: 5Gi
    maxHeapSize:
    heapNewSize:
    service:
      name: entity-storage-db-service
      port: 9042

datasets:
  locations:
    enabled: true
    name: dataset-locations-db
    container: dataset-locations-db-container
    image: solutions-dataset-locations
    config: dataset-locations-db-config
    dataVolume: dataset-locations-db-data
    dataVolumeClaim: dataset-locations-db-data
    dataVolumeSize: 2Gi
    service:
      name: dataset-locations-db-service
      queryPort: 9100
    ingress:
      enabled: false
      path: /datasets/locations/db/

api:
  enabled: true
  name: api
  container: api-container
  internalPort: 8080
  image: solutions-api-service
  config: api-config
  secret: api-secret
  external:
    path: /api/
  expiry:
    poleLifetime: 365
    caseLifetime: 365
  maxResults:
    max: 10000
    default: 500
    suggest: 500
  service:
    name: api-service
    port: 8080
  dataVolume: api-entity-data
  dataVolumeClaim: api-entity-data
  dataVolumeSize: 100M
  dataEntity:
    container: data-entity
    image: solutions-lema-data-entity
  authSetup:
    container: auth-setup
    image: solutions-auth-setup
    config: auth-setup-config
    secret: auth-setup-secret

lemaUi:
  enabled: true
  name: lema-ui
  replicas: 2
  container: lema-ui-container
  image: lema-ui
  config: lema-ui-config
  service:
    name: lema-ui-service
    port: 80
  external:
    path: /lema/
