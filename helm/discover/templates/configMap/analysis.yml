apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.analysis.config }}
data:
  ISOL_AUDIT_DB_HOST: "{{ .Values.audit.service.name }}"
  ISOL_AUDIT_DB_PORT: "{{ .Values.audit.service.port }}"
  ISOL_AUDIT_DB_NAME: "{{ .Values.audit.database }}"
  ISOL_API_SERVICE_APPLICATION_TYPE: "{{ .Values.api.applicationType }}"
  ISOL_LICENSE_SERVER_HOST: "{{ .Values.licenseServer.service.name }}"
  ISOL_LICENSE_SERVER_PORT: "{{ .Values.licenseServer.port }}"
  ISOL_ENTITY_STORAGEDB_HOST: "{{ .Values.entity.storage.service.name }}"
  ISOL_ENTITY_STORAGEDB_PORT: "{{ .Values.entity.storage.service.port }}"
  ISOL_ENTITY_INDEXDB_PROTOCOL: "{{ .Values.entity.index.service.protocol }}"
  ISOL_ENTITY_INDEXDB_HOST: "{{ .Values.entity.index.service.name }}"
  ISOL_ENTITY_INDEXDB_ACI_PORT: "{{ .Values.entity.index.service.queryPort }}"
  ISOL_ENTITY_INDEXDB_INDEX_PORT: "{{ .Values.entity.index.service.indexPort }}"
  ISOL_ENTITY_INDEXDB_COMMUNITY_PROTOCOL: "{{ .Values.entity.index.community.protocol }}"
  ISOL_ENTITY_INDEXDB_COMMUNITY_HOST: "{{ .Values.entity.index.community.host }}"
  ISOL_ENTITY_INDEXDB_COMMUNITY_ACI_PORT: "{{ .Values.entity.index.community.aciPort }}"
  ISOL_ENTITY_VECTOR_QMS_PROTOCOL: "{{ .Values.entity.vector.qms.service.protocol }}"
  ISOL_ENTITY_VECTOR_QMS_HOST: "{{ .Values.entity.vector.qms.service.name }}"
  ISOL_ENTITY_VECTOR_QMS_ACI_PORT: "{{ .Values.entity.vector.qms.service.aciPort }}"

  ISOL_SECURITY_DATA_VOLUME_PATH: "/data/security"
  ISOL_ENTITY_DATA_VOLUME_PATH: "/data/entity"
  ISOL_ENTITY_IDOL_SECURITY_TYPE: "{{ .Values.api.idolSecurity.type }}"
  ISOL_FILE_STORE_URL: "{{ .Values.filestore.service.protocol }}://{{ .Values.filestore.service.name }}:{{ .Values.filestore.service.port }}{{ .Values.filestore.service.path }}"
  ISOL_FILE_STORE_BUCKET: "{{ .Values.filestore.bucket }}"
  ISOL_ANALYSIS_HOST: "{{ .Values.analysis.service.name }}"
  ISOL_ANALYSIS_API_PORT: "{{ .Values.analysis.service.port }}"
  ISOL_ANALYSIS_API_PATH: "{{ .Values.analysis.service.path }}"
  ISOL_ANALYSIS_FACE_DEC_THREADS: "{{ .Values.analysis.concurrency.threads.face }}"
  ISOL_ANALYSIS_VEHICLE_THREADS: "{{ .Values.analysis.concurrency.threads.vehicle }}"
  ISOL_ANALYSIS_OBJECT_THREADS: "{{ .Values.analysis.concurrency.threads.object }}"
  ISOL_ANALYSIS_MAX_TIMER_DRIVEN_THREAD_COUNT: "{{ .Values.analysis.concurrency.max }}"
  ISOL_ANALYSIS_CREATE_PREVIEW_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.createPreview}}"
  ISOL_ANALYSIS_EXTRACT_METADATA_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.extractMetadata}}"
  ISOL_ANALYSIS_FACE_DETECTION_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.faceDetection}}"
  ISOL_ANALYSIS_FACE_RECOGNITION_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.faceRecognition}}"
  ISOL_ANALYSIS_FACE_TRAINING_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.faceTraining}}"
  ISOL_ANALYSIS_FETCH_S3_OBJECT_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.fetchS3Object}}"
  ISOL_ANALYSIS_IMAGE_EXTRACT_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.imageExtract}}"
  ISOL_ANALYSIS_KEY_VIEW_EXPORT_TO_HTML_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.keyViewExportToHTML}}"
  ISOL_ANALYSIS_OBJECT_CLASS_RECOGNITION_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.objectClassRecognition}}"
  ISOL_ANALYSIS_PUT_ISOL_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.putIsol}}"
  ISOL_ANALYSIS_REMOVE_DOCUMENT_PART_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.removeDocumentPart}}"
  ISOL_ANALYSIS_TRANSCODE_VIDEO_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.transcodeVideo}}"
  ISOL_ANALYSIS_VEHICLE_ANALYSIS_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.vehicleAnalysis}}"
  ISOL_ANALYSIS_VIDEO_CLIP_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.videoClip}}"
  ISOL_ANALYSIS_ANALYSIS_ROUTE_ON_ATTRIBUTE_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.analysisRouteOnAttribute}}"
  ISOL_ANALYSIS_CREATE_PREVIEW_ROUTE_ON_ATTRIBUTE_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.createPreviewRouteOnAttribute}}"
  ISOL_ANALYSIS_EXTRACT_JOB_ATTRIBUTES_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.extractJobAttributes}}"
  ISOL_ANALYSIS_EXTRACT_JOB_OPTIONS_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.extractJobOptions}}"
  ISOL_ANALYSIS_FAIL_ISOL_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.failIsol}}"
  ISOL_ANALYSIS_GET_LICENSE_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.getLicense}}"
  ISOL_ANALYSIS_HANDLE_HTTP_REQUEST_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.handleHTTPRequest}}"
  ISOL_ANALYSIS_HANDLE_HTTP_RESPONSE_FAILURE_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.handleHTTPResponseFailure}}"
  ISOL_ANALYSIS_HANDLE_HTTP_RESPONSE_SUCCESS_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.handleHTTPResponseSuccess}}"
  ISOL_ANALYSIS_HTML_FROM_DOCUMENT_ROUTE_ON_ATTRIBUTE_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.htmlFromDocumentRouteOnAttribute}}"
  ISOL_ANALYSIS_SET_CONTENT_TASK_COUNT: "{{ .Values.analysis.concurrency.taskCount.setContent}}"

---

apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.analysis.secret }}
data:
  ISOL_AUDIT_DB_USERNAME: {{ .Values.audit.username | b64enc }}
  ISOL_AUDIT_DB_PASSWORD: {{ .Values.audit.password | b64enc }}
  ISOL_FILE_STORE_USER: {{ .Values.filestore.username | b64enc }}
  ISOL_FILE_STORE_PASSWORD: {{ .Values.filestore.password | b64enc }}
