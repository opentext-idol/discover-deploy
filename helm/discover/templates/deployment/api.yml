{{- if .Values.api.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.api.name }}

spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      component:  {{ .Values.api.name }}
  template:
    metadata:
      labels:
        component: {{ .Values.api.name }}
    spec:
      containers:
        - name: {{ .Values.api.container }}
{{ include "image" (dict
  "Values" .Values
  "imageName" .Values.api.image
  "version" .Values.docker.versions.discoverApi
  ) | indent 10 }}
          imagePullPolicy: {{ .Values.docker.pullPolicy }}
          ports:
            - containerPort: {{ .Values.api.internalPort }}
          envFrom:
            - secretRef:
                name: {{ .Values.api.secret }}
            - configMapRef:
                name: {{ .Values.api.config }}
          volumeMounts:
            - name: {{ .Values.dataSecurity.volume }}
              mountPath: /data/security
            - name: {{ .Values.dataEntity.volume }}
              mountPath: /data/entity
          startupProbe:
{{ include "probe.api" . | indent 12 }}
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 30
          readinessProbe:
{{ include "probe.api" . | indent 12 }}
            failureThreshold: 2
          livenessProbe:
{{ include "probe.api" . | indent 12 }}
            periodSeconds: 60
            failureThreshold: 20

      volumes:
        - name: {{ .Values.dataSecurity.volume }}
          persistentVolumeClaim:
            claimName: {{ .Values.dataSecurity.volumeClaim }}
        - name: {{ .Values.dataEntity.volume }}
          persistentVolumeClaim:
            claimName: {{ .Values.dataEntity.volumeClaim }}
      imagePullSecrets:
        - name: {{ .Values.secret.name }}
---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.api.service.name }}
spec:
  type: NodePort
  selector:
    component: {{ .Values.api.name }}
  ports:
    - name: http
      port: {{ .Values.api.service.port }}
      targetPort: 8080
{{- end -}}
